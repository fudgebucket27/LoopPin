@page "/"
@using LoopPin.Models
@using LoopPin.Services
@using Newtonsoft.Json
@using System.Text
@inject IPinataService PinataService;

<PageTitle>Loop Pin</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Welcome to Loop Pin</MudText>
<MudText Typo="Typo.h6">This app will generate an IPFS CID for you to use to mint on Loopring</MudText>

<MudTextField @bind-Value="nftName" Label="NFT Name (Mandatory)" Variant="Variant.Outlined" Disabled="@isUploading"></MudTextField>
<MudTextField @bind-Value="nftDescription" Label="NFT Description (Mandatory)" Variant="Variant.Outlined" Disabled="@isUploading"></MudTextField>
<MudTextField @bind-Value="nftRoyaltyPercentage" Label="NFT Royalty Percentage, (Between 0 - 10)(Mandatory)" Variant="Variant.Outlined" Disabled="@isUploading"></MudTextField>

<InputFile id="fileInput" OnChange="UploadFiles" hidden />
<MudFab HtmlTag="label"
        Disabled="@isUploading"
        Color="Color.Secondary"
        Icon="@Icons.Filled.Image"
        Label="@nftImageFileName"
        for="fileInput" />
<br />


@if (errorMessage != null)
{
    <MudText Typo="Typo.h6">@errorMessage</MudText>
}

@if (pinataNftMetadataData != null)
{
    <MudText Typo="Typo.h6">IPFS METADATA CID Generated: @pinataNftMetadataData.IpfsHash</MudText>
}


@code
{
    private PinataData? pinataNftImageData;
    private PinataData? pinataNftMetadataData;
    long maxFileSize = 1024 * 1024 * 15;
    private string nftImageFileName = "Click here to select the NFT Image";
    private string? errorMessage;
    private bool isUploading;
    private string? nftName;
    private string? nftDescription;
    private int nftRoyaltyPercentage = 6;
    private StreamContent? fileContent;

    private async Task UploadFiles(InputFileChangeEventArgs e)
    {
        if (String.IsNullOrEmpty(nftName) || String.IsNullOrEmpty(nftDescription))
        {
            errorMessage = "You need to enter an NFT Name and Description";
            return;
        }

        if(nftRoyaltyPercentage > 10)
        {
            errorMessage = "NFT Royalty Percentage needs to be between 0 - 10";
            return;
        }

        if(e.File.Size > maxFileSize)
        {
            errorMessage = "File size too large";
            return;
        }

        errorMessage = "";
        fileContent = new StreamContent(e.File.OpenReadStream(maxFileSize));

        if (fileContent != null)
        {
            nftImageFileName = e.File.Name;
            Guid generatedGuidForImage = Guid.NewGuid();
            string imageGuid = generatedGuidForImage.ToString();
            nftImageFileName = "Uploading NFT Image...";
            isUploading = true;
            pinataNftImageData = await PinataService.SubmitPin(await fileContent.ReadAsByteArrayAsync(), imageGuid);
            if (pinataNftImageData != null)
            {
                nftImageFileName = "NFT Image Uploaded...";
                NftMetadata nftMetadata = new NftMetadata
                    {
                        name = nftName,
                        description = nftDescription,
                        image = "ipfs://" + pinataNftImageData.IpfsHash,
                        royalty_percentage = nftRoyaltyPercentage
                    };
                Guid generatedGuidForMetadata = Guid.NewGuid();
                string metadataGuidString = generatedGuidForMetadata.ToString();
                MetadataGuid metadataGuid = new MetadataGuid
                {
                    name = metadataGuidString
                };
                string metadataGuidJsonString = JsonConvert.SerializeObject(metadataGuid);
                string metaDataJsonString = JsonConvert.SerializeObject(nftMetadata);
                byte[] metaDataByteArray = Encoding.ASCII.GetBytes(metaDataJsonString);
                nftImageFileName = "Uploading NFT Metadata...";
                pinataNftMetadataData = await PinataService.SubmitPin(metaDataByteArray, "metadata.json", true, metadataGuidJsonString);
                if(pinataNftMetadataData != null)
                {
                    nftImageFileName = "NFT Metadata Uploaded...";
                }
                else
                {
                    nftImageFileName = "NFT Metadata failed to upload...try again";
                }

            }
            else
            {
                nftImageFileName = "NFT Image upload failed...try again";
            }

            isUploading = false;
        }
        else
        {
            errorMessage = "Upload an image for your NFT!";
        }
    }
}